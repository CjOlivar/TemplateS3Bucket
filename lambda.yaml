# Name : Shared Lambda Function Stack
# Version : 1.0.0
# Description : Creates Lambda Function which are shared across services
#
# ----------------------------------------------------------------------------------------------------------------------
# Maintenance History
# -------------------
# Name            Date        Version     C/R                             Description
# ----------------------------------------------------------------------------------------------------------------------
# Antonio Olivar  2024-05-23  1.0.0                                       Initial version - cloudfront invalidation
# ----------------------------------------------------------------------------------------------------------------------
#
# Resources:
# 1. IAM Role
# 2. Lambda Function
# 3. SSM Parameter
# Dependencies:
# N/A

AWSTemplateFormatVersion: 2010-09-09

Description: This template deploy shared Lambda Functions

Parameters:
  environment:
    Description: Environment
    Type: String
    Default: "nonProd"
    AllowedValues:
      - "nonProd"
      - "prod"
      - "nonProdKBS"
      - "prodKBS"

Resources:
  InvalidationFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: InvalidationFunctionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Path: /
      Policies:
        - PolicyName: AccessPolicyCodepipeline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codepipeline:PutJobFailureResult'
                  - 'codepipeline:PutJobSuccessResult'
                  - 'cloudfront:CreateInvalidation'
                Resource: '*'

  InvalidationFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: CloudfrontInvalidationFunction
      Handler: index.lambda_handler
      Code: 
        ZipFile: |
              import json
              import boto3

              code_pipeline = boto3.client("codepipeline")
              cloud_front = boto3.client("cloudfront")

              def lambda_handler(event, context):
                  job_id = event["CodePipeline.job"]["id"]
                  try:
                      user_params = json.loads(
                          event["CodePipeline.job"]
                              ["data"]
                              ["actionConfiguration"]
                              ["configuration"]
                              ["UserParameters"]
                      )
                      cloud_front.create_invalidation(
                          DistributionId=user_params["distributionId"],
                          InvalidationBatch={
                              "Paths": {
                                  "Quantity": len(user_params["objectPaths"]),
                                  "Items": user_params["objectPaths"],
                              },
                              "CallerReference": event["CodePipeline.job"]["id"],
                          },
                      )
                  except Exception as e:
                      code_pipeline.put_job_failure_result(
                          jobId=job_id,
                          failureDetails={
                              "type": "JobFailed",
                              "message": str(e),
                          },
                      )
                  else:
                      code_pipeline.put_job_success_result(
                          jobId=job_id,
                      )
      Runtime: python3.8
      Description: Lambda function to invalidate cache files in cloudfront distributions
      MemorySize: 128
      Timeout: 600
      Role:
        Fn::GetAtt:
          - InvalidationFunctionRole
          - Arn
      Environment:
        Variables:
          PYTHONWARNINGS: ignore
  
  OutputInvalidationFuction:
    Type: AWS::SSM::Parameter   
    Properties:
      Description: Invalidation Lambda Function Name
      Name: !Sub '/cf-output/${environment}/shared/Lambda/InvalidationFunctionName'
      Type: String
      Value: !Ref InvalidationFunction